"""
Django settings for web project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

BASE_DIR = Path(__file__).resolve().parent.parent

# .env 파일 경로 설정
dotenv_path = os.path.join(BASE_DIR, '.env')

# .env 파일 로드
load_dotenv(dotenv_path)

# 환경 변수 가져오기
NCP_CLIENT_ID = os.getenv('NCP_CLIENT_ID')
NCP_CLIENT_SECRET = os.getenv('NCP_CLIENT_SECRET')

# 디버깅 출력
print("Loaded NCP_CLIENT_ID:", NCP_CLIENT_ID)
print("Loaded NCP_CLIENT_SECRET:", NCP_CLIENT_SECRET)

# Build paths inside the project like this: BASE_DIR / 'subdir'.

LOGIN_URL = '/login/'  # 로그인하지 않은 경우 리다이렉트할 경로

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-)ml)-$v^=g02rac821m4rtnu%4tw9#1u_*@a%*$81%m9z2v@b0"

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = os.environ.get('DEBUG', 1)

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '43.201.171.106', 'www.seoulogue.com', 'seoulogue.com']

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # 개발용 로컬 호스트
    "http://127.0.0.1:3000", # 개발용 로컬 호스트
    "http://www.seoulogue.com",  # 배포용 호스트
    "https://www.seoulogue.com",  # 배포용 호스트
]

CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS",
]

CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "X-NCP-APIGW-API-KEY-ID",
    "X-NCP-APIGW-API-KEY",
]

# 자격 증명(쿠키, 인증 정보) 허용
CORS_ALLOW_CREDENTIALS = True

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'corsheaders',
    'rest_framework',
    "main",
    'langraph',
]

AUTH_USER_MODEL = 'main.CustomUser'

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "web.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            BASE_DIR / "templates",  # 템플릿 디렉토리
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [
#             BASE_DIR / 'templates',  # 일반적으로 템플릿 폴더 경로는 이렇게 설정합니다.
#         ],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

WSGI_APPLICATION = "web.wsgi.application"

# local용

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres',  # 데이터베이스 이름
#         'USER': 'postgres',       # PostgreSQL 사용자 이름
#         'PASSWORD': 'jasZeh-tunkix-qomhy3',   # PostgreSQL 사용자 비밀번호
#         'HOST': '127.0.0.1',           # 또는 DB 서버 IP
#         'PORT': '5432',                # 기본값
#     }
# }

# aws rds용

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',  # 데이터베이스 이름
        'USER': 'seoulogue',       # PostgreSQL 사용자 이름
        'PASSWORD': 'jasZeh-tunkix-qomhy3',   # PostgreSQL 사용자 비밀번호
        'HOST': 'database-3.c7cs2oymcsal.ap-northeast-2.rds.amazonaws.com',
        'PORT': '5432',                # 기본값
    }
}




# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Session settings
SESSION_COOKIE_AGE = 60 * 60 * 24 * 1    # 1일 동안 세션 유지
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # 브라우저를 닫아도 세션 유지

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# STATIC_URL = "static/"
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
# STATIC_ROOT = os.path.join(BASE_DIR, '_static')

# 추가적으로, static 파일들을 어디서 찾을지 지정할 수 있습니다.
STATICFILES_DIRS = [
    BASE_DIR / "main/static",  # 프로젝트 루트에 있는 static 디렉토리
]


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
